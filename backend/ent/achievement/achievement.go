// Code generated by ent, DO NOT EDIT.

package achievement

import (
	"time"
)

const (
	// Label holds the string label denoting the achievement type in the database.
	Label = "achievement"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldThumbnailImgURL holds the string denoting the thumbnail_img_url field in the database.
	FieldThumbnailImgURL = "thumbnail_img_url"
	// FieldBfpGoal holds the string denoting the bfp_goal field in the database.
	FieldBfpGoal = "bfp_goal"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the achievement in the database.
	Table = "achievements"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "achievements"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_achievements"
)

// Columns holds all SQL columns for achievement fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldThumbnailImgURL,
	FieldBfpGoal,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "achievements"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_achievements",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus string
	// DefaultThumbnailImgURL holds the default value on creation for the "thumbnail_img_url" field.
	DefaultThumbnailImgURL string
	// BfpGoalValidator is a validator for the "bfp_goal" field. It is called by the builders before save.
	BfpGoalValidator func(float64) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
)
