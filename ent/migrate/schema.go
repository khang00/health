// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AchievementsColumns holds the columns for the "achievements" table.
	AchievementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString, Default: "current"},
		{Name: "thumbnail_img_url", Type: field.TypeString, Default: "https://upload.wikimedia.org/wikipedia/commons/thumb/0/03/Japanese_SilkyTofu_%28Kinugoshi_Tofu%29.JPG/440px-Japanese_SilkyTofu_%28Kinugoshi_Tofu%29.JPG"},
		{Name: "bfp_goal", Type: field.TypeFloat64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_achievements", Type: field.TypeInt, Nullable: true},
	}
	// AchievementsTable holds the schema information for the "achievements" table.
	AchievementsTable = &schema.Table{
		Name:       "achievements",
		Columns:    AchievementsColumns,
		PrimaryKey: []*schema.Column{AchievementsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "achievements_users_achievements",
				Columns:    []*schema.Column{AchievementsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BfpDataPointsColumns holds the columns for the "bfp_data_points" table.
	BfpDataPointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "fat_percentage", Type: field.TypeFloat64},
		{Name: "total_weight", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_bf_ps", Type: field.TypeInt, Nullable: true},
	}
	// BfpDataPointsTable holds the schema information for the "bfp_data_points" table.
	BfpDataPointsTable = &schema.Table{
		Name:       "bfp_data_points",
		Columns:    BfpDataPointsColumns,
		PrimaryKey: []*schema.Column{BfpDataPointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bfp_data_points_users_BFPs",
				Columns:    []*schema.Column{BfpDataPointsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MealsColumns holds the columns for the "meals" table.
	MealsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "meal_type", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString, Default: "https://upload.wikimedia.org/wikipedia/commons/thumb/0/03/Japanese_SilkyTofu_%28Kinugoshi_Tofu%29.JPG/440px-Japanese_SilkyTofu_%28Kinugoshi_Tofu%29.JPG"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_meals", Type: field.TypeInt, Nullable: true},
	}
	// MealsTable holds the schema information for the "meals" table.
	MealsTable = &schema.Table{
		Name:       "meals",
		Columns:    MealsColumns,
		PrimaryKey: []*schema.Column{MealsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "meals_users_meals",
				Columns:    []*schema.Column{MealsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_name", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AchievementsTable,
		BfpDataPointsTable,
		MealsTable,
		UsersTable,
	}
)

func init() {
	AchievementsTable.ForeignKeys[0].RefTable = UsersTable
	BfpDataPointsTable.ForeignKeys[0].RefTable = UsersTable
	MealsTable.ForeignKeys[0].RefTable = UsersTable
}
